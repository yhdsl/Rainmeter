
此皮肤为自制插件 Timer.dll 的示例皮肤，仅供测试使用，具体应用需自行摸索。

==============================================================

本插件用于局部更新或计时

==============================================================

Measure下选项:

数值返回计数值
无字符串值

StartOnLoad=	(默认：0)
	0	:皮肤装载时不启动，也可为负值-N过滤掉前N次Bang
	1	:皮肤装载时启动

Step=		(默认：1)
	>0	:每次更新时计数值的改变量，仅在皮肤装载时读取，后期用Bang更改

Update=		(默认：1000)
	10~3600000:以毫秒为单位的计时更新间隔

CountAction=	:每次更新执行的动作

FinishAction=	:用Bang定义终止值时，到达结束值时执行的动作，同时CountAction也将在其后执行

====================================================================

用法:

[MeasureTimer]
Measure=Plugin
Plugin=Timer
Update=1000
CountAction=[!UpdateMeasure #CurrentSection#]
FinishAction=

Bang命令:

Start
启动计时器，从0开始计数
可有如下格式
Start_起始值_终止值@步进，所有值都可为小数，但起始值和终止值不能小于0，步进可小于0且将被保存用于下次Bang
如Start_1_255@1，从1开始每次加1加到255后停止并执行FinishAction
Start_255_0@-1，等价于Start_255@-1，从1开始每次加1加到255后停止并执行FinishAction

Continue
若计时器已启动则继续，若未启动则启动并从0开始计数
格式同Start，如Continue_100，计时器已启动则计数值设为100，若未启动则启动并从0开始计数
区别主要在于Start的起始值是绝对重置的，Continue则视情况

Stop
停止计时器
